- name: Prepare ansible host
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Generate node environments
      changed_when: true
      ansible.builtin.command:
        cmd: ./generate-env.sh

    - name: Create metrics directory
      ansible.builtin.file:
        path: metrics
        state: directory

- name: Clean nodes and upload files (binaries and services)
  hosts: nodes
  become: true
  tasks:
    - name: Copy fledger binary to nodes
      ansible.builtin.copy:
        src: ~/fledger
        dest: ~/
        mode: preserve

    - name: Copy fledger services
      ansible.builtin.copy:
        src: fledger.service
        dest: /etc/systemd/system/
        mode: preserve

    - name: Remove config folders and log files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /root/flnode
        - /var/log/fledger
        - /var/log/flsignal

- name: Run signaling server on central node
  hosts: central
  become: true
  tasks:
    - name: Copy flsignal
      ansible.builtin.copy:
        src: ~/flsignal
        dest: ~/
        mode: preserve
    - name: Copy signaling service
      ansible.builtin.copy:
        src: flsignal.service
        dest: /etc/systemd/system/
        mode: preserve
    - name: Start signaling server
      ansible.builtin.systemd_service:
        name: flsignal
        state: restarted
        daemon_reload: true
    - name: Disable ip forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 0
        sysctl_set: true
        state: present
        reload: true

- name: Upload env and run fleger on each node
  hosts: nodes
  become: true
  tasks:
    - name: Copy env file to nodes
      ansible.builtin.copy:
        src: "env.systemd/{{ inventory_hostname }}.env"
        dest: ~/env.systemd
        mode: preserve
    - name: (Re)start fledger node
      ansible.builtin.systemd_service:
        name: fledger
        state: restarted
        no_block: true
        daemon_reload: true
    - name: Wait for message received on fledger node
      ansible.builtin.wait_for:
        path: /var/log/fledger
        search_regex: "RECV_CHAT_MSG TRIGGERED"
        timeout: 120

- name: Download metrics
  hosts: nodes
  become: true
  tasks:
    - name: Download metrics
      ansible.builtin.fetch:
        src: /tmp/out.metrics
        flat: true
        dest: "metrics/{{ inventory_hostname }}.metrics"

- name: Assemble metrics into one file
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Assemble metrics
      ansible.builtin.assemble:
        src: metrics
        dest: assembled.metrics
        mode: "644"
